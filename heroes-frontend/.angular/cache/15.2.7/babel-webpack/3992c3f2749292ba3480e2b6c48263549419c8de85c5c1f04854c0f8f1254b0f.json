{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { HEROES } from './mock-heroes';\nimport { of } from 'rxjs';\nlet HeroService = class HeroService {\n  constructor(messageservice) {\n    this.messageservice = messageservice;\n  }\n  //  getHeroes is a method to return the data from file mock-heroes , return array of type Hero\n  getHeroes() {\n    const heroes = of(HEROES); //simulation to respond with array of heroes from mock heroes\n    return heroes; //of used to return observable\n  }\n};\n\nHeroService = __decorate([Injectable({\n  providedIn: 'root'\n})], HeroService);\nexport { HeroService };","map":{"version":3,"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAE1C,SAASC,MAAM,QAAQ,eAAe;AACtC,SAAqBC,EAAE,QAAQ,MAAM;AAM9B,IAAMC,WAAW,GAAjB,MAAMA,WAAW;EAEtBC,YAAoBC,cAAe;IAAf,mBAAc,GAAdA,cAAc;EAAK;EACzC;EACEC,SAAS;IACP,MAAMC,MAAM,GAAGL,EAAE,CAACD,MAAM,CAAC,EAAuB;IAChD,OAAOM,MAAM,CAAC,CAAgC;EAChD;CAGD;;AAVYJ,WAAW,eAHvBH,UAAU,CAAC;EACVQ,UAAU,EAAE;CACb,CAAC,GACWL,WAAW,CAUvB;SAVYA,WAAW","names":["Injectable","HEROES","of","HeroService","constructor","messageservice","getHeroes","heroes","providedIn"],"sourceRoot":"","sources":["D:\\Prog courses\\Projs\\Angular\\Tour of heroes\\tour_of_heroes\\src\\app\\hero.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Hero } from './heroes/hero';\nimport { HEROES } from './mock-heroes';\nimport { Observable, of } from 'rxjs';\nimport { MessageService } from './message.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeroService {\n\n  constructor(private messageservice:) { }\n//  getHeroes is a method to return the data from file mock-heroes , return array of type Hero\n  getHeroes(): Observable<Hero[]> {                    //observable(template) used to wait the server to respond with the data requested, i have to specify the data to be sent in the template\n    const heroes = of(HEROES)                       //simulation to respond with array of heroes from mock heroes\n    return heroes;                                //of used to return observable\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}