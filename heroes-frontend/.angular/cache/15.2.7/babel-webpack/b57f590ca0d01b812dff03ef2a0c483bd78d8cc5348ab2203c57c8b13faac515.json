{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport { responseIterator } from \"./responseIterator.js\";\nimport { throwServerError } from \"../utils/index.js\";\nimport { PROTOCOL_ERRORS_SYMBOL } from \"../../errors/index.js\";\nimport { isApolloPayloadResult } from \"../../utilities/common/incrementalResult.js\";\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function readMultipartBody(response, observer) {\n  var _a, _b, _c, _d, _e;\n  return __awaiter(this, void 0, void 0, function () {\n    var decoder, contentType, delimiter, boundaryVal, boundary, buffer, iterator, running, _f, value, done, chunk, bi, message, i, headers, contentType_1, body, result, next;\n    var _g, _h;\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          if (TextDecoder === undefined) {\n            throw new Error(\"TextDecoder must be defined in the environment: please import a polyfill.\");\n          }\n          decoder = new TextDecoder(\"utf-8\");\n          contentType = (_a = response.headers) === null || _a === void 0 ? void 0 : _a.get(\"content-type\");\n          delimiter = \"boundary=\";\n          boundaryVal = (contentType === null || contentType === void 0 ? void 0 : contentType.includes(delimiter)) ? contentType === null || contentType === void 0 ? void 0 : contentType.substring((contentType === null || contentType === void 0 ? void 0 : contentType.indexOf(delimiter)) + delimiter.length).replace(/['\"]/g, \"\").replace(/\\;(.*)/gm, \"\").trim() : \"-\";\n          boundary = \"--\".concat(boundaryVal);\n          buffer = \"\";\n          iterator = responseIterator(response);\n          running = true;\n          _j.label = 1;\n        case 1:\n          if (!running) return [3, 3];\n          return [4, iterator.next()];\n        case 2:\n          _f = _j.sent(), value = _f.value, done = _f.done;\n          chunk = typeof value === \"string\" ? value : decoder.decode(value);\n          running = !done;\n          buffer += chunk;\n          bi = buffer.indexOf(boundary);\n          while (bi > -1) {\n            message = void 0;\n            _g = [buffer.slice(0, bi), buffer.slice(bi + boundary.length)], message = _g[0], buffer = _g[1];\n            if (message.trim()) {\n              i = message.indexOf(\"\\r\\n\\r\\n\");\n              headers = parseHeaders(message.slice(0, i));\n              contentType_1 = headers[\"content-type\"];\n              if (contentType_1 && contentType_1.toLowerCase().indexOf(\"application/json\") === -1) {\n                throw new Error(\"Unsupported patch content type: application/json is required.\");\n              }\n              body = message.slice(i);\n              try {\n                result = parseJsonBody(response, body.replace(\"\\r\\n\", \"\"));\n                if (Object.keys(result).length > 1 || \"data\" in result || \"incremental\" in result || \"errors\" in result || \"payload\" in result) {\n                  if (isApolloPayloadResult(result)) {\n                    next = {};\n                    if (\"payload\" in result) {\n                      next = __assign({}, result.payload);\n                    }\n                    if (\"errors\" in result) {\n                      next = __assign(__assign({}, next), {\n                        extensions: __assign(__assign({}, \"extensions\" in next ? next.extensions : null), (_h = {}, _h[PROTOCOL_ERRORS_SYMBOL] = result.errors, _h))\n                      });\n                    }\n                    (_b = observer.next) === null || _b === void 0 ? void 0 : _b.call(observer, next);\n                  } else {\n                    (_c = observer.next) === null || _c === void 0 ? void 0 : _c.call(observer, result);\n                  }\n                } else if (Object.keys(result).length === 1 && \"hasNext\" in result && !result.hasNext) {\n                  (_d = observer.complete) === null || _d === void 0 ? void 0 : _d.call(observer);\n                }\n              } catch (err) {\n                handleError(err, observer);\n              }\n            }\n            bi = buffer.indexOf(boundary);\n          }\n          return [3, 1];\n        case 3:\n          (_e = observer.complete) === null || _e === void 0 ? void 0 : _e.call(observer);\n          return [2];\n      }\n    });\n  });\n}\nexport function parseHeaders(headerText) {\n  var headersInit = {};\n  headerText.split(\"\\n\").forEach(function (line) {\n    var i = line.indexOf(\":\");\n    if (i > -1) {\n      var name_1 = line.slice(0, i).trim().toLowerCase();\n      var value = line.slice(i + 1).trim();\n      headersInit[name_1] = value;\n    }\n  });\n  return headersInit;\n}\nexport function parseJsonBody(response, bodyText) {\n  if (response.status >= 300) {\n    var getResult = function () {\n      try {\n        return JSON.parse(bodyText);\n      } catch (err) {\n        return bodyText;\n      }\n    };\n    throwServerError(response, getResult(), \"Response not successful: Received status code \".concat(response.status));\n  }\n  try {\n    return JSON.parse(bodyText);\n  } catch (err) {\n    var parseError = err;\n    parseError.name = \"ServerParseError\";\n    parseError.response = response;\n    parseError.statusCode = response.status;\n    parseError.bodyText = bodyText;\n    throw parseError;\n  }\n}\nexport function handleError(err, observer) {\n  var _a, _b;\n  if (err.name === \"AbortError\") return;\n  if (err.result && err.result.errors && err.result.data) {\n    (_a = observer.next) === null || _a === void 0 ? void 0 : _a.call(observer, err.result);\n  }\n  (_b = observer.error) === null || _b === void 0 ? void 0 : _b.call(observer, err);\n}\nexport function readJsonBody(response, operation, observer) {\n  parseAndCheckHttpResponse(operation)(response).then(function (result) {\n    var _a, _b;\n    (_a = observer.next) === null || _a === void 0 ? void 0 : _a.call(observer, result);\n    (_b = observer.complete) === null || _b === void 0 ? void 0 : _b.call(observer);\n  }).catch(function (err) {\n    return handleError(err, observer);\n  });\n}\nexport function parseAndCheckHttpResponse(operations) {\n  return function (response) {\n    return response.text().then(function (bodyText) {\n      return parseJsonBody(response, bodyText);\n    }).then(function (result) {\n      if (response.status >= 300) {\n        throwServerError(response, result, \"Response not successful: Received status code \".concat(response.status));\n      }\n      if (!Array.isArray(result) && !hasOwnProperty.call(result, \"data\") && !hasOwnProperty.call(result, \"errors\")) {\n        throwServerError(response, result, \"Server response was missing for query '\".concat(Array.isArray(operations) ? operations.map(function (op) {\n          return op.operationName;\n        }) : operations.operationName, \"'.\"));\n      }\n      return result;\n    });\n  };\n}","map":{"version":3,"names":["__assign","__awaiter","__generator","responseIterator","throwServerError","PROTOCOL_ERRORS_SYMBOL","isApolloPayloadResult","hasOwnProperty","Object","prototype","readMultipartBody","response","observer","_a","_b","_c","_d","_e","decoder","contentType","delimiter","boundaryVal","boundary","buffer","iterator","running","_f","value","done","chunk","bi","message","i","headers","contentType_1","body","result","next","_g","_h","_j","label","TextDecoder","undefined","Error","get","includes","substring","indexOf","length","replace","trim","concat","sent","decode","slice","parseHeaders","toLowerCase","parseJsonBody","keys","payload","extensions","errors","call","hasNext","complete","err","handleError","headerText","headersInit","split","forEach","line","name_1","bodyText","status","getResult","JSON","parse","parseError","name","statusCode","data","error","readJsonBody","operation","parseAndCheckHttpResponse","then","catch","operations","text","Array","isArray","map","op","operationName"],"sources":["D:/Prog courses/Projs/Graphql/Tour of Heroes with nestJS/tour_of_heroes-frontend/node_modules/@apollo/client/link/http/parseAndCheckHttpResponse.js"],"sourcesContent":["import { __assign, __awaiter, __generator } from \"tslib\";\nimport { responseIterator } from \"./responseIterator.js\";\nimport { throwServerError } from \"../utils/index.js\";\nimport { PROTOCOL_ERRORS_SYMBOL } from \"../../errors/index.js\";\nimport { isApolloPayloadResult } from \"../../utilities/common/incrementalResult.js\";\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function readMultipartBody(response, observer) {\n    var _a, _b, _c, _d, _e;\n    return __awaiter(this, void 0, void 0, function () {\n        var decoder, contentType, delimiter, boundaryVal, boundary, buffer, iterator, running, _f, value, done, chunk, bi, message, i, headers, contentType_1, body, result, next;\n        var _g, _h;\n        return __generator(this, function (_j) {\n            switch (_j.label) {\n                case 0:\n                    if (TextDecoder === undefined) {\n                        throw new Error(\"TextDecoder must be defined in the environment: please import a polyfill.\");\n                    }\n                    decoder = new TextDecoder(\"utf-8\");\n                    contentType = (_a = response.headers) === null || _a === void 0 ? void 0 : _a.get(\"content-type\");\n                    delimiter = \"boundary=\";\n                    boundaryVal = (contentType === null || contentType === void 0 ? void 0 : contentType.includes(delimiter))\n                        ? contentType === null || contentType === void 0 ? void 0 : contentType.substring((contentType === null || contentType === void 0 ? void 0 : contentType.indexOf(delimiter)) + delimiter.length).replace(/['\"]/g, \"\").replace(/\\;(.*)/gm, \"\").trim()\n                        : \"-\";\n                    boundary = \"--\".concat(boundaryVal);\n                    buffer = \"\";\n                    iterator = responseIterator(response);\n                    running = true;\n                    _j.label = 1;\n                case 1:\n                    if (!running) return [3, 3];\n                    return [4, iterator.next()];\n                case 2:\n                    _f = _j.sent(), value = _f.value, done = _f.done;\n                    chunk = typeof value === \"string\" ? value : decoder.decode(value);\n                    running = !done;\n                    buffer += chunk;\n                    bi = buffer.indexOf(boundary);\n                    while (bi > -1) {\n                        message = void 0;\n                        _g = [\n                            buffer.slice(0, bi),\n                            buffer.slice(bi + boundary.length),\n                        ], message = _g[0], buffer = _g[1];\n                        if (message.trim()) {\n                            i = message.indexOf(\"\\r\\n\\r\\n\");\n                            headers = parseHeaders(message.slice(0, i));\n                            contentType_1 = headers[\"content-type\"];\n                            if (contentType_1 &&\n                                contentType_1.toLowerCase().indexOf(\"application/json\") === -1) {\n                                throw new Error(\"Unsupported patch content type: application/json is required.\");\n                            }\n                            body = message.slice(i);\n                            try {\n                                result = parseJsonBody(response, body.replace(\"\\r\\n\", \"\"));\n                                if (Object.keys(result).length > 1 ||\n                                    \"data\" in result ||\n                                    \"incremental\" in result ||\n                                    \"errors\" in result ||\n                                    \"payload\" in result) {\n                                    if (isApolloPayloadResult(result)) {\n                                        next = {};\n                                        if (\"payload\" in result) {\n                                            next = __assign({}, result.payload);\n                                        }\n                                        if (\"errors\" in result) {\n                                            next = __assign(__assign({}, next), { extensions: __assign(__assign({}, (\"extensions\" in next ? next.extensions : null)), (_h = {}, _h[PROTOCOL_ERRORS_SYMBOL] = result.errors, _h)) });\n                                        }\n                                        (_b = observer.next) === null || _b === void 0 ? void 0 : _b.call(observer, next);\n                                    }\n                                    else {\n                                        (_c = observer.next) === null || _c === void 0 ? void 0 : _c.call(observer, result);\n                                    }\n                                }\n                                else if (Object.keys(result).length === 1 &&\n                                    \"hasNext\" in result &&\n                                    !result.hasNext) {\n                                    (_d = observer.complete) === null || _d === void 0 ? void 0 : _d.call(observer);\n                                }\n                            }\n                            catch (err) {\n                                handleError(err, observer);\n                            }\n                        }\n                        bi = buffer.indexOf(boundary);\n                    }\n                    return [3, 1];\n                case 3:\n                    (_e = observer.complete) === null || _e === void 0 ? void 0 : _e.call(observer);\n                    return [2];\n            }\n        });\n    });\n}\nexport function parseHeaders(headerText) {\n    var headersInit = {};\n    headerText.split(\"\\n\").forEach(function (line) {\n        var i = line.indexOf(\":\");\n        if (i > -1) {\n            var name_1 = line.slice(0, i).trim().toLowerCase();\n            var value = line.slice(i + 1).trim();\n            headersInit[name_1] = value;\n        }\n    });\n    return headersInit;\n}\nexport function parseJsonBody(response, bodyText) {\n    if (response.status >= 300) {\n        var getResult = function () {\n            try {\n                return JSON.parse(bodyText);\n            }\n            catch (err) {\n                return bodyText;\n            }\n        };\n        throwServerError(response, getResult(), \"Response not successful: Received status code \".concat(response.status));\n    }\n    try {\n        return JSON.parse(bodyText);\n    }\n    catch (err) {\n        var parseError = err;\n        parseError.name = \"ServerParseError\";\n        parseError.response = response;\n        parseError.statusCode = response.status;\n        parseError.bodyText = bodyText;\n        throw parseError;\n    }\n}\nexport function handleError(err, observer) {\n    var _a, _b;\n    if (err.name === \"AbortError\")\n        return;\n    if (err.result && err.result.errors && err.result.data) {\n        (_a = observer.next) === null || _a === void 0 ? void 0 : _a.call(observer, err.result);\n    }\n    (_b = observer.error) === null || _b === void 0 ? void 0 : _b.call(observer, err);\n}\nexport function readJsonBody(response, operation, observer) {\n    parseAndCheckHttpResponse(operation)(response)\n        .then(function (result) {\n        var _a, _b;\n        (_a = observer.next) === null || _a === void 0 ? void 0 : _a.call(observer, result);\n        (_b = observer.complete) === null || _b === void 0 ? void 0 : _b.call(observer);\n    })\n        .catch(function (err) { return handleError(err, observer); });\n}\nexport function parseAndCheckHttpResponse(operations) {\n    return function (response) {\n        return response\n            .text()\n            .then(function (bodyText) { return parseJsonBody(response, bodyText); })\n            .then(function (result) {\n            if (response.status >= 300) {\n                throwServerError(response, result, \"Response not successful: Received status code \".concat(response.status));\n            }\n            if (!Array.isArray(result) &&\n                !hasOwnProperty.call(result, \"data\") &&\n                !hasOwnProperty.call(result, \"errors\")) {\n                throwServerError(response, result, \"Server response was missing for query '\".concat(Array.isArray(operations)\n                    ? operations.map(function (op) { return op.operationName; })\n                    : operations.operationName, \"'.\"));\n            }\n            return result;\n        });\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}