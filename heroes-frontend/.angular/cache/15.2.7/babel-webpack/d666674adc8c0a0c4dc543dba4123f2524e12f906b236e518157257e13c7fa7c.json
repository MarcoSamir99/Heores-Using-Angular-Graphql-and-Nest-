{"ast":null,"code":"import { HEROES } from './mock-heroes';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./message.service\";\nexport class HeroService {\n  constructor(httpClient, messageservice) {\n    this.httpClient = httpClient;\n    this.messageservice = messageservice;\n  }\n  //  getHeroes is a method to return the data from file mock-heroes , return array of type Hero\n  getHeroes() {\n    // const heroes = of(HEROES)                       //simulation to respond with array of heroes from mock heroes, of used to return observable\n    this.messageservice.add('HeroService: fetched heroes');\n    const heroes = this.httpClient.get('http://localhost:3000/heroes');\n    return heroes;\n  }\n  getHero(id) {\n    const hero = HEROES.find(h => h.id === id);\n    this.messageservice.add(`HeroService fetched hero id=${id}`);\n    return of(hero);\n  }\n}\nHeroService.ɵfac = function HeroService_Factory(t) {\n  return new (t || HeroService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.MessageService));\n};\nHeroService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HeroService,\n  factory: HeroService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAAqBC,EAAE,QAAQ,MAAM;;;;AAOrC,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,UAAsB,EAAUC,cAA8B;IAA9D,eAAU,GAAVD,UAAU;IAAsB,mBAAc,GAAdC,cAAc;EAAoB;EACxF;EACEC,SAAS;IACP;IACA,IAAI,CAACD,cAAc,CAACE,GAAG,CAAC,6BAA6B,CAAC;IACtD,MAAMC,MAAM,GAAG,IAAI,CAACJ,UAAU,CAACK,GAAG,CAAC,8BAA8B,CAAC;IAClE,OAAOD,MAAM;EAEf;EAEAE,OAAO,CAACC,EAAU;IAChB,MAAMC,IAAI,GAAGZ,MAAM,CAACa,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACH,EAAE,KAAKA,EAAE,CAAE;IAC3C,IAAI,CAACN,cAAc,CAACE,GAAG,CAAC,+BAA+BI,EAAE,EAAE,CAAC;IAC5D,OAAOV,EAAE,CAACW,IAAI,CAAC;EACjB;;AAhBWV,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAa,SAAXb,WAAW;EAAAc,YAFV;AAAM","names":["HEROES","of","HeroService","constructor","httpClient","messageservice","getHeroes","add","heroes","get","getHero","id","hero","find","h","factory","providedIn"],"sourceRoot":"","sources":["D:\\Prog courses\\Projs\\Angular\\2\\tour_of_heroes-frontend1\\src\\app\\hero.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Hero } from './heroes/hero';\nimport { HEROES } from './mock-heroes';\nimport { Observable, of } from 'rxjs';\nimport { MessageService } from './message.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeroService {\n\n  constructor(private httpClient: HttpClient ,private messageservice: MessageService) { }\n//  getHeroes is a method to return the data from file mock-heroes , return array of type Hero\n  getHeroes(): Observable<Hero[]> {                    //observable(template) used to wait the server to respond with the data requested, i have to specify the data to be sent in the template\n    // const heroes = of(HEROES)                       //simulation to respond with array of heroes from mock heroes, of used to return observable\n    this.messageservice.add('HeroService: fetched heroes');\n    const heroes = this.httpClient.get('http://localhost:3000/heroes');\n    return heroes;                                \n       \n  }\n\n  getHero(id: number): Observable<Hero> {\n    const hero = HEROES.find(h => h.id === id)!;\n    this.messageservice.add(`HeroService fetched hero id=${id}`);\n    return of(hero);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}