{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs';\nimport { GET_HERO } from './graphql/graphql.queries';\nlet HeroService = class HeroService {\n  constructor(httpClient, messageservice, apollo, heroGql) {\n    this.httpClient = httpClient;\n    this.messageservice = messageservice;\n    this.apollo = apollo;\n    this.heroGql = heroGql;\n  }\n  getHeroes() {\n    const heroes = this.heroGql.watch().valueChanges.pipe(map(result => result.data.hero));\n    return heroes;\n  }\n  getHero(id) {\n    const hero = this.apollo.query({\n      query: GET_HERO,\n      variables: {\n        id: id\n      }\n    }).pipe(map(response => response.data));\n    console.log(hero);\n    return hero;\n  }\n};\nHeroService = __decorate([Injectable({\n  providedIn: 'root'\n})], HeroService);\nexport { HeroService };","map":{"version":3,"mappings":";AACA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAAqBC,GAAG,QAAY,MAAM;AAG1C,SAASC,QAAQ,QAAoB,2BAA2B;AAQzD,IAAMC,WAAW,GAAjB,MAAMA,WAAW;EAKtBC,YAAqBC,UAAsB,EACjCC,cAA8B,EAC9BC,MAAc,EACdC,OAAgB;IAHL,eAAU,GAAVH,UAAU;IACrB,mBAAc,GAAdC,cAAc;IACd,WAAM,GAANC,MAAM;IACN,YAAO,GAAPC,OAAO;EAAa;EAE9BC,SAAS;IACP,MAAMC,MAAM,GAAG,IAAI,CAACF,OAAO,CAACG,KAAK,EAAE,CAACC,YAAY,CAACC,IAAI,CAACZ,GAAG,CAACa,MAAM,IAAIA,MAAM,CAACC,IAAI,CAACC,IAAI,CAAC,CAAC;IACtF,OAAON,MAAM;EACf;EAEAO,OAAO,CAACC,EAAU;IAChB,MAAMF,IAAI,GAAG,IAAI,CAACT,MAAM,CAACY,KAAK,CAAQ;MACpCA,KAAK,EAAEjB,QAAQ;MACfkB,SAAS,EAAE;QACTF,EAAE,EAAEA;;KAEP,CAAC,CAACL,IAAI,CAACZ,GAAG,CAACoB,QAAQ,IAAIA,QAAQ,CAACN,IAAI,CAAC,CAAC;IACvCO,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;IACjB,OAAOA,IAAI;EACb;CAGD;AA3BYb,WAAW,eAHvBH,UAAU,CAAC;EACVwB,UAAU,EAAE;CACb,CAAC,GACWrB,WAAW,CA2BvB;SA3BYA,WAAW","names":["Injectable","map","GET_HERO","HeroService","constructor","httpClient","messageservice","apollo","heroGql","getHeroes","heroes","watch","valueChanges","pipe","result","data","hero","getHero","id","query","variables","response","console","log","providedIn"],"sourceRoot":"","sources":["D:\\Prog courses\\Projs\\Graphql\\Tour of Heroes with nestJS\\tour_of_heroes-frontend\\src\\app\\hero.service.ts"],"sourcesContent":["\nimport { Injectable } from '@angular/core';\nimport { Observable, map, of } from 'rxjs';\nimport { MessageService } from './message.service';\nimport { HttpClient } from '@angular/common/http';\nimport { GET_HERO, GET_HEROES } from './graphql/graphql.queries';\nimport { Apollo } from 'apollo-angular';\nimport { Hero } from './heroes/hero';\nimport { HeroesGQL, HeroesQuery } from 'src/generated/graphql';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeroService {\n\n  heroes? : Hero[];\n  hero? : Hero;\n  \n  constructor (private httpClient: HttpClient ,\n    private messageservice: MessageService, \n    private apollo: Apollo,\n    private heroGql: HeroGQL) { }\n\n  getHeroes(): Observable<Hero[]> {                    \n    const heroes = this.heroGql.watch().valueChanges.pipe(map(result => result.data.hero))\n    return heroes;                                 \n  }\n\n  getHero(id: number): Observable<Hero> {\n    const hero = this.apollo.query<Hero> ({\n      query: GET_HERO,\n      variables: {\n        id: id,\n      }\n    }).pipe(map(response => response.data));\n    console.log(hero);\n    return hero;                                 \n  }\n\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}