{"ast":null,"code":"import { interval, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./message.service\";\nimport * as i3 from \"apollo-angular\";\nimport * as i4 from \"src/generated/graphql\";\nexport class HeroService {\n  constructor(httpClient, messageservice, apollo, heroesGql, heroGql, suggestedHeroGql) {\n    this.httpClient = httpClient;\n    this.messageservice = messageservice;\n    this.apollo = apollo;\n    this.heroesGql = heroesGql;\n    this.heroGql = heroGql;\n    this.suggestedHeroGql = suggestedHeroGql;\n  }\n  getHeroes() {\n    const heroes = this.heroesGql.watch().valueChanges.pipe(map(result => result.data.heroes));\n    return heroes;\n  }\n  getHero(id) {\n    const hero = this.heroGql.watch({\n      id\n    }).valueChanges.pipe(map(result => result.data.hero));\n    console.log(hero);\n    return hero;\n  }\n  getSuggestedHeroes(key) {\n    const suggestedHeroes = this.suggestedHeroGql.watch({\n      key\n    }).valueChanges.pipe(map(result => result.data.suggestedHeroes), interval(3000));\n    return suggestedHeroes;\n  }\n}\nHeroService.ɵfac = function HeroService_Factory(t) {\n  return new (t || HeroService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.MessageService), i0.ɵɵinject(i3.Apollo), i0.ɵɵinject(i4.HeroesGQL), i0.ɵɵinject(i4.HeroGQL), i0.ɵɵinject(i4.SuggestedHeroesGQL));\n};\nHeroService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HeroService,\n  factory: HeroService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAA4BA,QAAQ,EAAEC,GAAG,QAAO,MAAM;;;;;;AAWtD,OAAM,MAAOC,WAAW;EAMtBC,YAAqBC,UAAsB,EACjCC,cAA8B,EAC9BC,MAAc,EACdC,SAAoB,EACpBC,OAAgB,EAChBC,gBAAoC;IALzB,eAAU,GAAVL,UAAU;IACrB,mBAAc,GAAdC,cAAc;IACd,WAAM,GAANC,MAAM;IACN,cAAS,GAATC,SAAS;IACT,YAAO,GAAPC,OAAO;IACP,qBAAgB,GAAhBC,gBAAgB;EAAyB;EAEnDC,SAAS;IACP,MAAMC,MAAM,GAAG,IAAI,CAACJ,SAAS,CAACK,KAAK,EAAE,CAACC,YAAY,CAACC,IAAI,CAACb,GAAG,CAACc,MAAM,IAAIA,MAAM,CAACC,IAAI,CAACL,MAAM,CAAC,CAAC;IAC1F,OAAOA,MAAM;EACf;EAEAM,OAAO,CAACC,EAAU;IAChB,MAAMC,IAAI,GAAG,IAAI,CAACX,OAAO,CAACI,KAAK,CAAC;MAACM;IAAE,CAAC,CAAC,CAACL,YAAY,CAACC,IAAI,CAACb,GAAG,CAACc,MAAM,IAAIA,MAAM,CAACC,IAAI,CAACG,IAAI,CAAC,CAAC;IACxFC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB,OAAOA,IAAI;EACb;EAEAG,kBAAkB,CAACC,GAAW;IAC5B,MAAMC,eAAe,GAAG,IAAI,CAACf,gBAAgB,CAACG,KAAK,CAAC;MAACW;IAAG,CAAC,CAAC,CAACV,YAAY,CAACC,IAAI,CAACb,GAAG,CAACc,MAAM,IAAIA,MAAM,CAACC,IAAI,CAACQ,eAAe,CAAC,EAAExB,QAAQ,CAAC,IAAI,CAAC,CAAE;IACzI,OAAOwB,eAAe;EACxB;;AA3BWtB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAuB,SAAXvB,WAAW;EAAAwB,YAFV;AAAM","names":["interval","map","HeroService","constructor","httpClient","messageservice","apollo","heroesGql","heroGql","suggestedHeroGql","getHeroes","heroes","watch","valueChanges","pipe","result","data","getHero","id","hero","console","log","getSuggestedHeroes","key","suggestedHeroes","factory","providedIn"],"sourceRoot":"","sources":["D:\\Prog courses\\Projs\\Graphql\\Tour of Heroes with nestJS\\tour_of_heroes-frontend\\src\\app\\hero.service.ts"],"sourcesContent":["\nimport { Injectable } from '@angular/core';\nimport { Observable, delay, interval, map} from 'rxjs';\nimport { MessageService } from './message.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Apollo } from 'apollo-angular';\nimport { Hero } from './heroes/hero';\nimport { HeroesGQL, HeroGQL, SuggestedHeroesGQL} from 'src/generated/graphql';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeroService {\n\n  heroes? : Hero[];\n  hero? : Hero;\n  suggestedHeroes? : Hero[];\n  \n  constructor (private httpClient: HttpClient ,\n    private messageservice: MessageService, \n    private apollo: Apollo,\n    private heroesGql: HeroesGQL,\n    private heroGql: HeroGQL,\n    private suggestedHeroGql: SuggestedHeroesGQL,) { }\n\n  getHeroes(): Observable<Hero[]> {                    \n    const heroes = this.heroesGql.watch().valueChanges.pipe(map(result => result.data.heroes))\n    return heroes;                                 \n  }\n\n  getHero(id: number): Observable<Hero> {            \n    const hero = this.heroGql.watch({id}).valueChanges.pipe(map(result => result.data.hero))\n    console.log(hero);\n    return hero;                                 \n  }\n\n  getSuggestedHeroes(key: string): Observable<Hero[]> {            \n    const suggestedHeroes = this.suggestedHeroGql.watch({key}).valueChanges.pipe(map(result => result.data.suggestedHeroes),(interval(3000)));\n    return suggestedHeroes;\n  }          \n  \n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}