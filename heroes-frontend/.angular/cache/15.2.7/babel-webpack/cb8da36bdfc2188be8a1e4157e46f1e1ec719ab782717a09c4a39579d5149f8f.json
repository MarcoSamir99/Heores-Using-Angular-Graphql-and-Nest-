{"ast":null,"code":"// import { Hero } from './heroes/hero';\n// import { HEROES } from './mock-heroes';\nimport { Observable } from 'rxjs';\nimport { GET_HERO, GET_HEROES } from './graphql/graphql.queries';\nimport * as i0 from \"@angular/core\";\nexport class HeroService {}\nHeroService.ɵfac = function HeroService_Factory(t) {\n  return new (t || HeroService)();\n};\nHeroService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HeroService,\n  factory: HeroService.ɵfac,\n  providedIn: 'root'\n});\n{}\ngetHeroes();\nObservable < any > {\n  const: heroes = this.apollo.query({\n    query: GET_HEROES\n  }),\n  return: heroes\n};\ngetHero(id, number);\nObservable < any > {\n  const: hero = this.apollo.query({\n    query: GET_HERO,\n    variables: {\n      id: id\n    }\n  }),\n  return: hero\n};","map":{"version":3,"mappings":"AACA;AACA;AACA,SAASA,UAAU,QAAY,MAAM;AAGrC,SAASC,QAAQ,EAAEC,UAAU,QAAQ,2BAA2B;;AAMhE,OAAM,MAAOC,WAAW;AAAXA,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAC,SAAXD,WAAW;EAAAE,YAFV;AAAM;AAOQ;AAE1BC,SAAS,EAAE;AAAEN,UAAU,GAACO,GAAG,GAAE;EAC3BC,KAAK,EAACC,MAAM,GAAG,IAAI,CAACC,MAAM,CAACC,KAAK,CAAO;IACrCA,KAAK,EAAET;GACR,CAAC;EACFU,MAAM,EAACH;CACR;AAEDI,OAAO,CAACC,EAAE,EAAEC,MAAM,CAAC;AAAEf,UAAU,GAACO,GAAG,GAAE;EACnCC,KAAK,EAACQ,IAAI,GAAG,IAAI,CAACN,MAAM,CAACC,KAAK,CAAO;IACnCA,KAAK,EAAEV,QAAQ;IACfgB,SAAS,EAAE;MACTH,EAAE,EAAEA;;GAEP,CAAC;EACFF,MAAM,EAACI;CACR","names":["Observable","GET_HERO","GET_HEROES","HeroService","factory","providedIn","getHeroes","any","const","heroes","apollo","query","return","getHero","id","number","hero","variables"],"sourceRoot":"","sources":["D:\\Prog courses\\Projs\\Graphql\\Tour of Heroes with nestJS\\tour_of_heroes-frontend\\src\\app\\hero.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n// import { Hero } from './heroes/hero';\n// import { HEROES } from './mock-heroes';\nimport { Observable, of } from 'rxjs';\nimport { MessageService } from './message.service';\nimport { HttpClient } from '@angular/common/http';\nimport { GET_HERO, GET_HEROES } from './graphql/graphql.queries';\nimport { Apollo } from 'apollo-angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeroService {\n\n  heroes: <hero>\n  constructor (private httpClient: HttpClient ,\n    private messageservice: MessageService, \n    private apollo: Apollo) { }\n\n  getHeroes(): Observable<any> {                    \n    const heroes = this.apollo.query<any> ({\n      query: GET_HEROES,\n    });\n    return heroes;                                 \n  }\n\n  getHero(id: number): Observable<any> {\n    const hero = this.apollo.query<any> ({\n      query: GET_HERO,\n      variables: {\n        id: id,\n      }\n    });\n    return hero;                                 \n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}