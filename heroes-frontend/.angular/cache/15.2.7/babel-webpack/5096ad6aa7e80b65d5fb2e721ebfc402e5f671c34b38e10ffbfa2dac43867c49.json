{"ast":null,"code":"import { GET_HEROES } from './graphql/graphql.queries';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./message.service\";\nimport * as i3 from \"apollo-angular\";\nexport class HeroService {\n  constructor(httpClient, messageservice, apollo) {\n    this.httpClient = httpClient;\n    this.messageservice = messageservice;\n  }\n  getHeroes() {\n    const heroes = this.apollo.watchQuery({\n      query: GET_HEROES\n    }).valueChanges;\n    return heroes;\n  }\n  getHero(id) {\n    const hero = this.httpClient.get(`http://localhost:3000/heroes/${id}`);\n    this.messageservice.add(`HeroService fetched hero id=${id}`);\n    return hero;\n  }\n}\nHeroService.ɵfac = function HeroService_Factory(t) {\n  return new (t || HeroService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.MessageService), i0.ɵɵinject(i3.Apollo));\n};\nHeroService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HeroService,\n  factory: HeroService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAMA,SAASA,UAAU,QAAQ,2BAA2B;;;;;AAMtD,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,UAAsB,EAAUC,cAA8B,EAChFC,MAAa;IADK,eAAU,GAAVF,UAAU;IAAsB,mBAAc,GAAdC,cAAc;EAC/C;EAEnBE,SAAS;IACP,MAAMC,MAAM,GAAG,IAAI,CAACF,MAAM,CAACG,UAAU,CAAM;MACzCC,KAAK,EAAET;KACR,CAAC,CAACU,YAAY;IACf,OAAOH,MAAM;EAEf;EAEAI,OAAO,CAACC,EAAU;IAChB,MAAMC,IAAI,GAAG,IAAI,CAACV,UAAU,CAACW,GAAG,CAAC,gCAAgCF,EAAE,EAAE,CAAC;IACtE,IAAI,CAACR,cAAc,CAACW,GAAG,CAAC,+BAA+BH,EAAE,EAAE,CAAC;IAC5D,OAAOC,IAAI;EACb;;AAjBWZ,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAe,SAAXf,WAAW;EAAAgB,YAFV;AAAM","names":["GET_HEROES","HeroService","constructor","httpClient","messageservice","apollo","getHeroes","heroes","watchQuery","query","valueChanges","getHero","id","hero","get","add","factory","providedIn"],"sourceRoot":"","sources":["D:\\Prog courses\\Projs\\Graphql\\Tour of Heroes with nestJS\\tour_of_heroes-frontend\\src\\app\\hero.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n// import { Hero } from './heroes/hero';\n// import { HEROES } from './mock-heroes';\nimport { Observable, of } from 'rxjs';\nimport { MessageService } from './message.service';\nimport { HttpClient } from '@angular/common/http';\nimport { GET_HEROES } from './graphql/graphql.queries';\nimport { Apollo } from 'apollo-angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeroService {\n\n  constructor(private httpClient: HttpClient ,private messageservice: MessageService, \n    apollo:Apollo) { }\n\n  getHeroes(): Observable<any> {                    \n    const heroes = this.apollo.watchQuery<any>({\n      query: GET_HEROES,\n    }).valueChanges;\n    return heroes;                                \n       \n  }\n\n  getHero(id: number): Observable<any> {\n    const hero = this.httpClient.get(`http://localhost:3000/heroes/${id}`);\n    this.messageservice.add(`HeroService fetched hero id=${id}`);\n    return hero;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}