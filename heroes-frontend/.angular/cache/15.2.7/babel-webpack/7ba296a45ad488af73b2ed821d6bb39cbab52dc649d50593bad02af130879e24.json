{"ast":null,"code":"// import { Hero } from './heroes/hero';\n// import { HEROES } from './mock-heroes';\nimport { Observable } from 'rxjs';\nimport { GET_HERO, GET_HEROES } from './graphql/graphql.queries';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./message.service\";\nimport * as i3 from \"apollo-angular\";\nexport class HeroService {\n  constructor(httpClient, messageservice, apollo) {\n    this.httpClient = httpClient;\n    this.messageservice = messageservice;\n    this.apollo = apollo;\n  }\n  getHeroes() {}\n}\nHeroService.ɵfac = function HeroService_Factory(t) {\n  return new (t || HeroService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.MessageService), i0.ɵɵinject(i3.Apollo));\n};\nHeroService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HeroService,\n  factory: HeroService.ɵfac,\n  providedIn: 'root'\n});\n{\n  const heroes = this.apollo.query({\n    query: GET_HEROES\n  });\n}\ngetHero(id, number);\nObservable < any > {\n  const: hero = this.apollo.query({\n    query: GET_HERO,\n    variables: {\n      id: id\n    }\n  }),\n  return: hero\n};","map":{"version":3,"mappings":"AACA;AACA;AACA,SAASA,UAAU,QAAY,MAAM;AAGrC,SAASC,QAAQ,EAAEC,UAAU,QAAQ,2BAA2B;;;;;AAOhE,OAAM,MAAOC,WAAW;EAItBC,YAAqBC,UAAsB,EACjCC,cAA8B,EAC9BC,MAAc;IAFH,eAAU,GAAVF,UAAU;IACrB,mBAAc,GAAdC,cAAc;IACd,WAAM,GAANC,MAAM;EAAY;EAE5BC,SAAS,IAAG;;AARDL,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAM,SAAXN,WAAW;EAAAO,YAFV;AAAM;AAUe;EAC/B,MAAMC,MAAM,GAAG,IAAI,CAACJ,MAAM,CAACK,KAAK,CAAQ;IACtCA,KAAK,EAAEV;GACR,CAAC;;AAIJW,OAAO,CAACC,EAAE,EAAEC,MAAM,CAAC;AAAEf,UAAU,GAACgB,GAAG,GAAE;EACnCC,KAAK,EAACC,IAAI,GAAG,IAAI,CAACX,MAAM,CAACK,KAAK,CAAQ;IACpCA,KAAK,EAAEX,QAAQ;IACfkB,SAAS,EAAE;MACTL,EAAE,EAAEA;;GAEP,CAAC;EACFM,MAAM,EAACF;CACR","names":["Observable","GET_HERO","GET_HEROES","HeroService","constructor","httpClient","messageservice","apollo","getHeroes","factory","providedIn","heroes","query","getHero","id","number","any","const","hero","variables","return"],"sourceRoot":"","sources":["D:\\Prog courses\\Projs\\Graphql\\Tour of Heroes with nestJS\\tour_of_heroes-frontend\\src\\app\\hero.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n// import { Hero } from './heroes/hero';\n// import { HEROES } from './mock-heroes';\nimport { Observable, of } from 'rxjs';\nimport { MessageService } from './message.service';\nimport { HttpClient } from '@angular/common/http';\nimport { GET_HERO, GET_HEROES } from './graphql/graphql.queries';\nimport { Apollo } from 'apollo-angular';\nimport { Hero } from './heroes/hero';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeroService {\n\n  heroes? : Hero[];\n  \n  constructor (private httpClient: HttpClient ,\n    private messageservice: MessageService, \n    private apollo: Apollo) { }\n\n  getHeroes() voi: Promise<Hero[]> {                    \n    const heroes = this.apollo.query<Hero> ({\n      query: GET_HEROES,\n    });\n                                   \n  }\n\n  getHero(id: number): Observable<any> {\n    const hero = this.apollo.query<Hero> ({\n      query: GET_HERO,\n      variables: {\n        id: id,\n      }\n    });\n    return hero;                                 \n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}