{"ast":null,"code":"import { GET_HERO, GET_HEROES } from './graphql/graphql.queries';\nimport * as i0 from \"@angular/core\";\nexport class HeroService {\n  getHeroes() {\n    const heroes = this.apollo.query({\n      query: GET_HEROES\n    });\n    return heroes;\n  }\n  getHero(id) {\n    const hero = this.apollo.query({\n      query: GET_HERO,\n      variables: {\n        id: id\n      }\n    });\n    return hero;\n  }\n}\nHeroService.ɵfac = function HeroService_Factory(t) {\n  return new (t || HeroService)();\n};\nHeroService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HeroService,\n  factory: HeroService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAMA,SAASA,QAAQ,EAAEC,UAAU,QAAQ,2BAA2B;;AAMhE,OAAM,MAAOC,WAAW;EAOtBC,SAAS;IACP,MAAMC,MAAM,GAAG,IAAI,CAACC,MAAM,CAACC,KAAK,CAAO;MACrCA,KAAK,EAAEL;KACR,CAAC;IACF,OAAOG,MAAM;EACf;EAEAG,OAAO,CAACC,EAAU;IAChB,MAAMC,IAAI,GAAG,IAAI,CAACJ,MAAM,CAACC,KAAK,CAAO;MACnCA,KAAK,EAAEN,QAAQ;MACfU,SAAS,EAAE;QACTF,EAAE,EAAEA;;KAEP,CAAC;IACF,OAAOC,IAAI;EACb;;AAtBWP,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAS,SAAXT,WAAW;EAAAU,YAFV;AAAM","names":["GET_HERO","GET_HEROES","HeroService","getHeroes","heroes","apollo","query","getHero","id","hero","variables","factory","providedIn"],"sourceRoot":"","sources":["D:\\Prog courses\\Projs\\Graphql\\Tour of Heroes with nestJS\\tour_of_heroes-frontend\\src\\app\\hero.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n// import { Hero } from './heroes/hero';\n// import { HEROES } from './mock-heroes';\nimport { Observable, of } from 'rxjs';\nimport { MessageService } from './message.service';\nimport { HttpClient } from '@angular/common/http';\nimport { GET_HERO, GET_HEROES } from './graphql/graphql.queries';\nimport { Apollo } from 'apollo-angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeroService {\n\n  heroes: <hero\n  constructor (private httpClient: HttpClient ,\n    private messageservice: MessageService, \n    private apollo: Apollo) { }\n\n  getHeroes(): Observable<any> {                    \n    const heroes = this.apollo.query<any> ({\n      query: GET_HEROES,\n    });\n    return heroes;                                 \n  }\n\n  getHero(id: number): Observable<any> {\n    const hero = this.apollo.query<any> ({\n      query: GET_HERO,\n      variables: {\n        id: id,\n      }\n    });\n    return hero;                                 \n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}