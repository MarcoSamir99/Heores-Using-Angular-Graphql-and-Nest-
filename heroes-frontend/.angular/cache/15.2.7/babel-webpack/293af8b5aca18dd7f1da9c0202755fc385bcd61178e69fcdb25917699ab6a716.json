{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet HeroesComponent = class HeroesComponent {\n  constructor(heroservice, messageService) {\n    this.heroservice = heroservice;\n    this.messageService = messageService;\n    this.heroes = []; // we made this empty array because service will fill it auto\n  }\n\n  ngOnInit() {\n    this.getHeroes();\n  }\n  onSelected(hero) {\n    this.selectedHero = hero;\n  }\n  //used when we use 2 methods 2 get the data\n  // //we made a method that return nothing(void) to call the hero service and assign its value to the present heroes value \n  // getHeroes(): void {\n  //   this.heroes = this.heroservice.getHeroes()\n  // }\n  //used when we use observable\n  getHeroes() {\n    this.heroservice.getHeroes() //we call the heroservice\n    .subscribe(heroes => this.heroes = heroes); //subscribe used to take function as a parameter (which is came from the observable in hero service), so we send parameter with the name of heroes and the heroes which came from the class above (this.heroes) we assign it to the prev. made parameter\n  }\n};\n\nHeroesComponent = __decorate([Component({\n  selector: 'app-heroes',\n  templateUrl: './heroes.component.html',\n  styleUrls: ['./heroes.component.css']\n})], HeroesComponent);\nexport { HeroesComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAWlC,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAK1BC,YAAoBC,WAAwB,EAAUC,cAAiB;IAAnD,gBAAW,GAAXD,WAAW;IAAuB,mBAAc,GAAdC,cAAc;IAHpE,WAAM,GAAW,EAAE,CAAC,CAAM;EAGgD;;EAE1EC,QAAQ;IACN,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAC,UAAU,CAACC,IAAU;IACnB,IAAI,CAACC,YAAY,GAAGD,IAAI;EAC1B;EAEF;EACE;EACA;EACA;EACA;EAEF;EACEF,SAAS;IACP,IAAI,CAACH,WAAW,CAACG,SAAS,EAAE,CAAmB;IAAA,CAC9CI,SAAS,CAACC,MAAM,IAAI,IAAI,CAACA,MAAM,GAAGA,MAAM,CAAC,EAAU;EACtD;CAED;;AA3BYV,eAAe,eAL3BD,SAAS,CAAC;EACTY,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,GACWb,eAAe,CA2B3B;SA3BYA,eAAe","names":["Component","HeroesComponent","constructor","heroservice","messageService","ngOnInit","getHeroes","onSelected","hero","selectedHero","subscribe","heroes","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\Prog courses\\Projs\\Angular\\Tour of heroes\\tour_of_heroes\\src\\app\\heroes\\heroes.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Hero } from './hero';\n// import { HEROES } from '../mock-heroes'; no longer needed because we use it in service\nimport { HeroService } from '../hero.service';\nimport { MessageService } from '../message.service';\n\n@Component({\n  selector: 'app-heroes',\n  templateUrl: './heroes.component.html',\n  styleUrls: ['./heroes.component.css']\n})\nexport class HeroesComponent {\n\n  heroes: Hero[] = [];      // we made this empty array because service will fill it auto\n  selectedHero?: Hero;  \n\n  constructor(private heroservice: HeroService, private messageService: M) {}\n\n  ngOnInit(): void {     //this used to make getHeroes method excuted (lifecycle)\n    this.getHeroes();\n  }\n\n  onSelected(hero: Hero): void{\n    this.selectedHero = hero;\n  }\n \n//used when we use 2 methods 2 get the data\n  // //we made a method that return nothing(void) to call the hero service and assign its value to the present heroes value \n  // getHeroes(): void {\n  //   this.heroes = this.heroservice.getHeroes()\n  // }\n\n//used when we use observable\n  getHeroes(): void {\n    this.heroservice.getHeroes()                   //we call the heroservice\n    .subscribe(heroes => this.heroes = heroes)          //subscribe used to take function as a parameter (which is came from the observable in hero service), so we send parameter with the name of heroes and the heroes which came from the class above (this.heroes) we assign it to the prev. made parameter\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}